name: Code QA

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  lint:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      with:
        ref: ${{ github.event.pull_request.head.ref }}
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.10'

    - name: Cache Poetry install
      uses: actions/cache@v2
      with:
        path: ~/.local
        key: poetry-1.1.12-0
    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: 1.1.12
        virtualenvs-create: true
        virtualenvs-in-project: true

    - name: Cache Dependencies
      id: cache-deps
      uses: actions/cache@v2
      with:
        path: .venv
        key: pydeps-${{ hashFiles('**/poetry.lock') }}
    - run: poetry install --no-interaction --no-root
      if: steps.cache-deps.outputs.cache-hit != 'true'
    - name: Install dependencies
      run: |
        poetry install --no-interaction

    - name: Configure Git
      run: |
        git config user.name github-actions
        git config user.email github-actions@github.com
        git pull

    - name: Show problems
      continue-on-error: true
      run: |
        poetry run flake8
    - name: Run QA Tests
      run: |
        poetry run isort .
        poetry run autopep8 --in-place **/*.py
        poetry run ttws .
    - name: Show unresolved problems
      run: |
        poetry run flake8

    - name: Commit changes
      continue-on-error: true
      run: |
        git add .
        git commit -m "[auto]: Fix code style"
        git push
